<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dt.dao.AppUserDAO">
	<resultMap type="com.dt.vo.AppUserVo" id="userMap"></resultMap>
    <resultMap type="select2Vo" id="userIdAndNameMap">
    </resultMap>
	<select id="appLogin" resultType="com.dt.vo.AppUserVo">
		<![CDATA[
			select * from t_app_user where password = #{passWord} and phone = #{phone} and status=0
		]]>
	</select>
	<select id="getById" resultMap="userMap" parameterType="long">
		select t.*,(select count(id) from t_user_friend where my_id=t.id) as fen,(select count(id) from t_user_news where user_id=t.id) as dongtai,(select count(id) from t_user_friend where your_id=t.id) as guanzhu  from t_app_user t where id =#{id}
	</select>
	<select id="checkLogin" resultType="int" parameterType="string">
		select count(id) from t_app_user where phone = #{phone}
	</select>
	<select id="checkReg" resultType="int" parameterType="string">
		select  count(*) from t_app_user where phone = #{phone}
	</select>
	<select id="findByPhone" resultMap="userMap" parameterType="string">
		select * from t_app_user where phone = #{phone}
	</select>
	<delete id="removeById" parameterType="long">
		delete from t_app_user where id = #{id}
	</delete>
	<select id="listPage" resultMap="userMap">
		select t.*,(select count(id) from t_user_friend where my_id=t.id) as fen,(select count(id) from t_user_news where user_id=t.id) as dongtai,(select count(id) from t_user_friend where your_id=t.id) as guanzhu from t_app_user t limit #{pageNo},#{pageSize}
	</select>
	<select id="listAll" resultMap="userMap">
		select * from t_app_user
	</select>
	<select id="getAppUser" resultMap="userIdAndNameMap">
		select id,name as text from t_app_user where status=0
	</select>
	<select id="count" resultType="long">
		select count(*) from t_app_user
	</select>
	<select id="cnts" resultType="int" parameterType="int">
		select count(id) from t_app_user where month(create_time)=#{months}
	</select>
	<sql id="find">
		<if test="appUserVo.createTime!=null"> and t.create_time BETWEEN #{appUserVo.createTime} AND #{appUserVo.endTime}</if>
		<if test="appUserVo.phone!=null">and t.phone like concat('%${appUserVo.phone}%')</if>
		<if test="appUserVo.name!=null">and t.name like concat('%${appUserVo.name}%')</if>
		<if test="appUserVo.sex!=null">and t.sex = #{appUserVo.sex}</if>
		<if test="appUserVo.min!=null and appUserVo.max!=null"> and (select count(id) from t_user_friend where my_id=t.id) BETWEEN #{appUserVo.min} AND #{appUserVo.max}</if>
		<if test="appUserVo.remark!=null">and t.remark like concat('%${appUserVo.remark}%')</if>
		<if test="appUserVo.status!=null">and t.status=#{appUserVo.status}</if>
	</sql>
	<select id="findAppUserList" resultMap="userMap">
		select t.*,(select count(id) from t_user_friend where my_id=t.id) as fen,(select count(id) from t_user_news where user_id=t.id) as dongtai,(select count(id) from t_user_friend where your_id=t.id) as guanzhu from t_app_user t where 1=1  <include refid="find"></include> limit #{pageQuery.pageNo},#{pageQuery.pageSize}
	</select>
	<select id="findAppUserListCount" resultType="long">
		select count(t.id) from t_app_user t where 1=1 <include refid="find"></include>
	</select>
	<select id="getFenSi" resultMap="userMap">
		select face_img,name from t_app_user  where  id in(select your_id from t_user_friend where my_id=#{id})
	</select>
	<select id="getPassword" resultType="string" parameterType="long">
		select password from t_app_user where id=#{id}
	</select>
    <select id="select2List" resultType="string" parameterType="long">
        select id,realname from t_app_user
    </select>
	<insert id="save" parameterType="userVo">
		<selectKey keyProperty="id" order="AFTER" resultType="long">
			SELECT LAST_INSERT_ID() as id
		</selectKey>
		insert into t_app_user (phone, password, name, realname, sex, age, qqopenid, wbopenid, wxopenid, status, create_time,face_img,remark) values (#{phone}, #{password}, #{name}, #{realname}, #{sex}, #{age}, #{qqopenid}, #{wbopenid}, #{wxopenid},#{status}, #{createTime},#{faceImg},#{remark})
	</insert>
	<update id="updateStatus">
		update t_app_user set status=#{status} where id=#{id}
	</update>
	<update id="updatePwd">
		update t_app_user set password=#{pwd} where id=#{id}
	</update>
	<update id="updatePassWord">
		update t_app_user set password=#{passWord} where phone=#{phone}
	</update>
	<update id="updatePhone">
		update t_app_user set phone=#{phone} where id=#{id}
	</update>
	<update id="updateFaceImg" >
		update t_app_user set face_img=#{faceImg} where id=#{id}
	</update>
	<update id="updateName" >
		update t_app_user set name=#{name} where id=#{id}
	</update>
	<update id="updateRemark" >
		update t_app_user set remark=#{remark} where id=#{id}
	</update>
	<update id="update">
		update t_app_user set
			phone = #{phone},
			name = #{name},
			realname = #{realname},
			sex = #{sex},
			age = #{age}
		where id = #{id}
	</update>
</mapper>