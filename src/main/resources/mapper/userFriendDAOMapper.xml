<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dt.dao.UserFriendDAO">
	<resultMap id="userFriendMap" type="com.dt.vo.UserFriendVo">
		<id column="id" property="id"></id>
		<result column="my_id" property="myId"></result>
		<result column="your_id" property="yourId"></result>
		<result column="is_active" property="isActive"></result>
		<result column="create_time" property="createTime"></result>
		<result column="myName" property="myName"></result>
		<result column="myFaceImg" property="myFaceImg"></result>
		<result column="yourFaceImg" property="yourFaceImg"></result>
		<association property="userVo" javaType="com.dt.vo.AppUserVo">
			<result column="name" property="name"></result>
			<result column="face_img" property="faceImg"></result>
			<result column="phone" property="phone"></result>
			<result column="remark" property="remark"></result>
		</association>
	</resultMap>
	<resultMap id="usersMap" type="com.dt.vo.UserFriendVo">
		<id column="id" property="id"></id>
		<result column="my_id" property="myId"></result>
		<result column="your_id" property="yourId"></result>
		<result column="is_active" property="isActive"></result>
		<result column="create_time" property="createTime"></result>
		<association property="userVo" javaType="com.dt.vo.AppUserVo">
			<result column="name" property="name"></result>
			<result column="face_img" property="faceImg"></result>
			<result column="phone" property="phone"></result>
			<result column="remark" property="remark"></result>
		</association>
	</resultMap>
	<select id="getById" resultMap="userFriendMap" parameterType="long">
		select t.*,(select name from t_app_user where id=t.my_id) as myName,u.name,u.remark,u.face_img,u.phone from t_user_friend t,t_app_user u where t.your_id=u.id and id = #{id}
	</select>
	<delete id="removeById" parameterType="long">
		delete from t_user_friend where id = #{id}
	</delete>
	<delete id="delete">
		delete from t_user_friend where my_id = #{myId} and your_id=#{yourId}
	</delete>
	<select id="listPage" resultMap="userFriendMap">
		select t.*,(select name from t_app_user where id=t.my_id) as myName,u.name,u.remark,u.face_img,u.phone,(select face_img from t_app_user where id=t.my_id) as myFaceImg,(select face_img from t_app_user where id=t.my_id) as yourFaceImg from t_user_friend t,t_app_user u where t.your_id=u.id <if test="id!=null">and t.my_id=#{id}</if>  order by t.create_time desc limit #{pageNo},#{pageSize}
	</select>
	<select id="listAll" resultMap="userFriendMap">
		select t.*,(select name from t_app_user where id=t.my_id) as myName from t_user_friend t,t_app_user u where t.your_id=u.id
	</select>
	<select id="getUserFriendList" resultMap="userFriendMap">
		select t.*,u.name,u.face_img,u.phone,u.remark from t_user_friend t,t_app_user u where t.my_id=u.id and t.your_id=#{userId}
	</select>
	<select id="getMyFenList" resultMap="userFriendMap">
		select t.*,u.name,u.face_img,u.phone,u.remark from t_user_friend t,t_app_user u where t.my_id=u.id and t.my_id=#{userId}
	</select>
	<select id="count" resultType="java.lang.Long">
		select count(t.id) from t_user_friend t,t_app_user u where t.your_id=u.id  <if test="id!=null">and t.my_id=#{id}</if>
	</select>
	<insert id="save" parameterType="userFriendVo">
		insert into t_user_friend (my_id,your_id, is_active, create_time) values (#{myId},#{yourId},#{isActive},#{createTime})
	</insert>
	<update id="updateStatus">
		update t_user_friend set is_active=#{status} where id=#{id}
	</update>
	<update id="update">
		update t_user_friend set
		my_id = #{myId},
		your_id = #{youId}
		where id = #{id}
	</update>
</mapper>